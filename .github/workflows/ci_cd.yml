name: CI/CD Pipeline

on:
  push:
    branches:
      - test/cd

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: get repository code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-write-only: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: build code and test
        run: ./gradlew clean build

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Download New Relic Files
        run: |
          mkdir -p newrelic
          aws s3 cp s3://newzet-newrelic/newrelic.jar ./newrelic/newrelic.jar
          aws s3 cp s3://newzet-newrelic/newrelic.yml ./newrelic/newrelic.yml

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image and push image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t "$DOCKERHUB_USERNAME/newzet-apm:$IMAGE_TAG" .
          docker push "$DOCKERHUB_USERNAME/newzet-apm:$IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Start Canary EC2
        run: |
          aws ec2 start-instances --instance-ids i-09796512811a1f3b9
          aws ec2 wait instance-running --instance-ids i-09796512811a1f3b9
